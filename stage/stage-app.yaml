apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: stage
  name: stage
  namespace: stage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stage
  template:
    metadata:
      labels:
        app: stage
    spec:
      containers:
        - image: rdegtyarev/netology-hw-13.01-back:latest # предварительно собрал image приложения и запушил в dockerhub
          imagePullPolicy: IfNotPresent
          name: back-stage # контейнер для back
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          ports:
            - containerPort: 9000
          env:
            - name: DATABASE_URL # передаем env с настройкой подключения к базе данных
              value: "postgres://postgres:postgres@stage-db-srv.stage:5432/news" # обращаемся к сервису postgres в namespase default (описан в манифесте stage-db.yaml)
        - image: rdegtyarev/netology-hw-13.01-front:latest # предварительно собрал image приложения и запушил в dockerhub
          imagePullPolicy: IfNotPresent
          name: front-stage # контейнер для front
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: stage-app-srv
  namespace: stage # создаем сервис, открываем необходимые порты на поде
spec:
  ports:
    - name: back
      port: 9000
    - name: front
      port: 8080
      targetPort: 80
  selector:
    app: stage
  type: ClusterIP